{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000'; // Ensure this is the correct URL\n\nexport const fetchRestaurants = async (page = 1, limit = 20, country = '', avgCost = '', cuisines = '', search = '') => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/restaurants?page=${page}&limit=${limit}&country=${encodeURIComponent(country)}&avg_cost=${encodeURIComponent(avgCost)}&cuisines=${encodeURIComponent(cuisines)}&search=${encodeURIComponent(search)}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching restaurants:', error);\n    return {\n      restaurants: [],\n      totalCount: 0,\n      page: 1,\n      totalPages: 1\n    }; // Return default values if there's an error\n  }\n};\nexport const fetchRestaurantById = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/restaurants/${id}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching restaurant details:', error);\n    return null; // Return null if there's an error\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchRestaurants","page","limit","country","avgCost","cuisines","search","response","fetch","encodeURIComponent","ok","Error","json","error","console","restaurants","totalCount","totalPages","fetchRestaurantById","id"],"sources":["c:/Users/nvsiv/OneDrive/Desktop/Assignment-TypeFace/code/web-ui/src/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000'; // Ensure this is the correct URL\r\n\r\nexport const fetchRestaurants = async (page = 1, limit = 20, country = '', avgCost = '', cuisines = '', search = '') => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/restaurants?page=${page}&limit=${limit}&country=${encodeURIComponent(country)}&avg_cost=${encodeURIComponent(avgCost)}&cuisines=${encodeURIComponent(cuisines)}&search=${encodeURIComponent(search)}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching restaurants:', error);\r\n    return { restaurants: [], totalCount: 0, page: 1, totalPages: 1 }; // Return default values if there's an error\r\n  }\r\n};\r\n\r\nexport const fetchRestaurantById = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/restaurants/${id}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching restaurant details:', error);\r\n    return null; // Return null if there's an error\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,OAAO,GAAG,EAAE,EAAEC,OAAO,GAAG,EAAE,EAAEC,QAAQ,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,KAAK;EACtH,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,qBAAqBE,IAAI,UAAUC,KAAK,YAAYO,kBAAkB,CAACN,OAAO,CAAC,aAAaM,kBAAkB,CAACL,OAAO,CAAC,aAAaK,kBAAkB,CAACJ,QAAQ,CAAC,WAAWI,kBAAkB,CAACH,MAAM,CAAC,EAAE,CAAC;IACpP,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO;MAAEE,WAAW,EAAE,EAAE;MAAEC,UAAU,EAAE,CAAC;MAAEf,IAAI,EAAE,CAAC;MAAEgB,UAAU,EAAE;IAAE,CAAC,CAAC,CAAC;EACrE;AACF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,EAAE,IAAK;EAC/C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,YAAY,gBAAgBoB,EAAE,EAAE,CAAC;IACjE,IAAI,CAACZ,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,IAAI,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}